name: Run Tests on PR
on:
  pull_request:
    branches: ['*']
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Run Tests
        id: test
        run: |
          yarn test --json --outputFile=testRes.json || true
          result=$(cat testRes.json | jq -r '.testResults[].assertionResults[] | [.ancestorTitles[], .title, .status] | @tsv' | awk -F $'\t' 'BEGIN {OFS = "|" ; print "| Test Suite | Test Name | Result |\n| :--- |:---------------:| :-----|"} NR>0 {if ($NF == "passed") {$NF="✅ Passed"} else if ($NF == "failed") {$NF="❌ Failed"}; print "|" $0 "|"}')
          testDetails=$(jq -r '"TotalTests: \(.numTotalTests)\nTotalTestSuites: \(.numTotalTestSuites)"' testRes.json)
          failed=$(jq -r '.numFailedTests' testRes.json)
          echo "Failed=$failed" >> $GITHUB_OUTPUT
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "testResult<<$EOF" >> $GITHUB_OUTPUT
          echo "$result" >> $GITHUB_OUTPUT
          echo "$EOF" >> $GITHUB_OUTPUT
          echo "testCount<<$EOF" >> $GITHUB_OUTPUT
          echo "$testDetails" >> $GITHUB_OUTPUT
          echo "$EOF" >> $GITHUB_OUTPUT
      - name: Update Pull Request Description
        if: always() && github.event_name == 'pull_request'
        uses: unsplash/comment-on-pr@v1.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          check_for_duplicate_msg: false
          msg: |
            ## Test Results
            ${{ steps.test.outputs.testCount }}
            The test results are in! Here's the coverage report:

            ${{ steps.test.outputs.testResult }}
      - name: Fail if tests failed
        if: always() && github.event_name == 'pull_request'
        run: exit ${{ steps.test.outputs.failed }}
